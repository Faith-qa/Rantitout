{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useSearch = () => {\n  _s();\n\n  const [err, setErr] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const [chat, setChat] = useState(null);\n  const {\n    user\n  } = useAuthContext();\n\n  const handlesearch = async chatdate => {\n    const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${user._id}/${new Date(chatdate).toISOString()}`;\n    console.log(url);\n    setErr(null);\n    setChat(null);\n\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      }); //console.log(response.data)\n\n      const json = await response.json(); //console.log(\"hello\", json)\n\n      if (json === 'chat was not found' || !json.user) {\n        setErr(json);\n        throw new Error(JSON.stringify(json)); //throw n ew Error(\"hello\")\n      }\n\n      console.log(json);\n      setChat(json);\n    } catch (err) {\n      setErr(err);\n      console.log(err);\n    }\n  }; // const handleselect = async(chatdate) => {\n  //     const messages = await handlesearch(chatdate)\n  //     console.log(\"here are the conv\", messages.messages)\n  //     return messages.messages\n  // }\n\n\n  return {\n    handlesearch,\n    chat,\n    err\n  };\n};\n\n_s(useSearch, \"h1zF9dLaEg6cRV54kPge4iyox6c=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"sources":["/home/faith/personal_project/TalktoMe/client/src/hooks/useSearch.jsx"],"names":["React","useState","useAuthContext","useSearch","err","setErr","isLoading","setIsLoading","chat","setChat","user","handlesearch","chatdate","url","process","env","REACT_APP_BASE_URL","_id","Date","toISOString","console","log","response","fetch","method","headers","Authorization","token","json","Error","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM;AAACS,IAAAA;AAAD,MAASR,cAAc,EAA7B;;AAMA,QAAMS,YAAY,GAAG,MAAMC,QAAN,IAAkB;AACnC,UAAMC,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,iBAAgBN,IAAI,CAACO,GAAI,IAAG,IAAIC,IAAJ,CAASN,QAAT,EAAmBO,WAAnB,EAAiC,EAA3G;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAR,IAAAA,MAAM,CAAC,IAAD,CAAN;AACAI,IAAAA,OAAO,CAAC,IAAD,CAAP;;AAEA,QAAG;AACC,YAAMa,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAD,EAAM;AAC9BW,QAAAA,MAAM,EAAE,KADsB;AAE9BC,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAG,UAAShB,IAAI,CAACiB,KAAM;AAArC;AAFqB,OAAN,CAA5B,CADD,CAMC;;AACA,YAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAT,EAAnB,CAPD,CAQA;;AAEA,UAAIA,IAAI,KAAK,oBAAT,IAAiC,CAACA,IAAI,CAAClB,IAA3C,EAAiD;AAChDL,QAAAA,MAAM,CAACuB,IAAD,CAAN;AACA,cAAM,IAAIC,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAV,CAAN,CAFgD,CAGhD;AACA;;AAEDR,MAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AAEAnB,MAAAA,OAAO,CAACmB,IAAD,CAAP;AAEF,KApBD,CAoBC,OAAMxB,GAAN,EAAU;AACPC,MAAAA,MAAM,CAACD,GAAD,CAAN;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,GAAZ;AAEH;AAEJ,GAhCD,CAV2B,CA4C3B;AACA;AACA;AAEA;AACA;;;AAEA,SAAO;AAACO,IAAAA,YAAD;AAAeH,IAAAA,IAAf;AAAqBJ,IAAAA;AAArB,GAAP;AACH,CApDM;;GAAMD,S;UAIMD,c","sourcesContent":["import React, {useState} from 'react'\n\nimport { useAuthContext } from './useAuthContext'\n\nexport const useSearch = () => {\n    const [err, setErr] = useState(null)\n    const [isLoading, setIsLoading] = useState(null)\n    const [chat, setChat] = useState(null)\n    const {user} = useAuthContext()\n\n    \n\n\n\n    const handlesearch = async(chatdate) =>{\n        const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${user._id}/${new Date(chatdate).toISOString()}`;\n        console.log(url)\n        setErr(null)\n        setChat(null)\n\n        try{\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {Authorization: `Bearer ${user.token}`}\n            })\n\n            //console.log(response.data)\n            const json = await response.json()\n           //console.log(\"hello\", json)\n\n           if (json === 'chat was not found' || !json.user) {\n            setErr(json);\n            throw new Error(JSON.stringify(json))\n            //throw n ew Error(\"hello\")\n           }\n\n           console.log(json)\n\n           setChat(json)\n\n        }catch(err){\n            setErr(err);\n            console.log(err)\n\n        }\n\n    }\n\n    // const handleselect = async(chatdate) => {\n    //     const messages = await handlesearch(chatdate)\n    //     console.log(\"here are the conv\", messages.messages)\n\n    //     return messages.messages\n    // }\n\n    return {handlesearch, chat, err}\n}\n\n  "]},"metadata":{},"sourceType":"module"}