{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nimport { useChatContext } from \"./useChatContext\";\nexport const useChats = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [chats, setChats] = useState([]);\n  const [err, setErr] = useState(null);\n  const {\n    user\n  } = useAuthContext(); //const {dispatch} = useChatContext()\n\n  const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${user._id}`;\n  useEffect(() => {\n    loadChats();\n    console.log(\"USE\", chats);\n  }, []);\n\n  const LoadChats = async () => {\n    _s();\n\n    setErr(null);\n\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const json = await response.json(); // console.log(json)\n\n      for (var i = 0; i < json.length; i++) {\n        for (var j = 0; j < i.length; j++) {\n          if (!j.date) {\n            setErr(json);\n            throw new Error(JSON.stringify(json));\n          } //  chaats.push(j)\n\n        }\n      }\n\n      useEffect(() => {\n        setChats(...json);\n      }, []); // setChats(...json)\n      // console.log(chats)\n    } catch (err) {\n      setErr(err);\n      console.log(err);\n    }\n  };\n\n  _s(LoadChats, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const updateChat = async (cDate, text) => {\n    setErr(null);\n    console.log(url + `/${cDate}`);\n\n    try {\n      //update chats on date\n      const response = await fetch(url + `/${cDate}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n          'Content-Type': 'Application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      const json = await response.json();\n      console.log(json);\n      setChats(json);\n    } catch (err) {\n      setErr(err);\n      console.log(err);\n    }\n  };\n\n  const createChat = async date => {\n    setErr(null);\n\n    try {\n      const response = await fetch(url + `/${date}`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n          'Content-Type': 'Application/json'\n        },\n        body: JSON.stringify({\n          date\n        })\n      });\n      const json = await response.json();\n      console.log(\"hello world\", json);\n      setChats(json);\n    } catch (err) {\n      console.log(err);\n      setErr(err);\n    }\n  };\n\n  return {\n    LoadChats,\n    updateChat,\n    createChat,\n    chats,\n    err\n  };\n};\n\n_s2(useChats, \"F0AwXHeyTBFrY12VrTlL5BP/l6Q=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"sources":["/home/faith/personal_project/TalktoMe/client/src/hooks/useChats.jsx"],"names":["React","useState","useEffect","useAuthContext","useChatContext","useChats","chats","setChats","err","setErr","user","url","process","env","REACT_APP_BASE_URL","_id","loadChats","console","log","LoadChats","response","fetch","method","headers","Authorization","token","json","i","length","j","date","Error","JSON","stringify","updateChat","cDate","text","body","createChat"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nimport { useAuthContext } from \"./useAuthContext\";\nimport { useChatContext } from \"./useChatContext\";\n\nexport const useChats = () => {\n    const [chats, setChats] = useState([]);\n    const [err, setErr] = useState(null);\n\n    const {user} = useAuthContext();\n    //const {dispatch} = useChatContext()\n    const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${user._id}`;\n    \n    useEffect(()=>{\n        loadChats()\n        console.log(\"USE\", chats)\n    }, [])\n\n    const LoadChats = async()=>{\n        setErr(null)\n       \n        try{\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {Authorization: `Bearer ${user.token}`}\n            })\n\n            const json = await response.json()\n           // console.log(json)\n\n            for (var i = 0; i < json.length; i++) {\n                for(var j = 0; j < i.length; j++) {\n                    if (!j.date){\n                        setErr(json)\n                        throw new Error(JSON.stringify(json))\n                    }\n                  //  chaats.push(j)\n                }\n                \n            }\n\n            useEffect(()=>{\n                setChats(...json)\n            },[])\n       \n            // setChats(...json)\n            // console.log(chats)\n\n\n\n\n        }catch(err){\n            setErr(err);\n            console.log(err)\n\n        }\n\n\n\n\n\n    }\n\n    const updateChat = async(cDate, text) => {\n        setErr(null)\n        console.log(url +`/${cDate}`)\n\n        try{\n            //update chats on date\n            const response = await fetch(url +`/${cDate}`, {\n                method: 'PUT',\n                headers: {Authorization: `Bearer ${user.token}`, 'Content-Type': 'Application/json'},\n                body: JSON.stringify({text})\n            })\n\n            const json = await response.json();\n            console.log(json)\n            setChats(json)\n        }catch(err){\n            setErr(err);\n            console.log(err)\n        }\n    }\n\n    const createChat = async(date)=> {\n        setErr(null)\n        try{\n            const response = await fetch(url + `/${date}`, {\n                method: 'POST',\n                headers: {Authorization: `Bearer ${user.token}`, 'Content-Type': 'Application/json'},\n                body: JSON.stringify({date})\n            })\n\n            const json = await response.json()\n            console.log(\"hello world\",json)\n            setChats(json)\n        }catch(err){console.log(err); setErr(err)}\n\n    }\n\n    return {LoadChats, updateChat,createChat, chats, err};\n}"]},"metadata":{},"sourceType":"module"}