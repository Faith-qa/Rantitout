{"ast":null,"code":"var _jsxFileName = \"/home/faith/personal_project/TalktoMe/client/src/Context/ChatContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useReducer } from \"react\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const chatContext = /*#__PURE__*/createContext(); //const url = `${process.env.REACT_APP_BASE_URL}/api/v1/users/login`;\n\nexport const ChatContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    user\n  } = useAuthContext();\n  const INITIAL_STATE = {\n    messages: []\n  };\n\n  const chatReducer = (state, action) => {\n    switch (action.type) {\n      case \"LOADMESSAGES\":\n        return {\n          messages: action.payload\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\n  return /*#__PURE__*/_jsxDEV(ChatContextProvider, {\n    value: {\n      data: state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatContextProvider, \"qikGc2PUnuPvjARL21TDz1Re+Qc=\", false, function () {\n  return [useAuthContext];\n});\n\n_c = ChatContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContextProvider\");","map":{"version":3,"sources":["/home/faith/personal_project/TalktoMe/client/src/Context/ChatContext.jsx"],"names":["createContext","useContext","useReducer","useAuthContext","chatContext","ChatContextProvider","children","user","INITIAL_STATE","messages","chatReducer","state","action","type","payload","dispatch","data"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,OAAtD;AAEA,SAASC,cAAT,QAA+B,yBAA/B;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC,C,CAEP;;AAEA,OAAO,MAAMK,mBAAmB,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC/C,QAAM;AAACC,IAAAA;AAAD,MAASJ,cAAc,EAA7B;AAEA,QAAMK,aAAa,GAAG;AAClBC,IAAAA,QAAQ,EAAE;AADQ,GAAtB;;AAIA,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAiB;AACjC,YAAQA,MAAM,CAACC,IAAf;AACI,WAAK,cAAL;AACI,eAAO;AAACJ,UAAAA,QAAQ,EAAEG,MAAM,CAACE;AAAlB,SAAP;;AACJ;AACI,eAAOH,KAAP;AAJR;AAOH,GARD;;AAUA,QAAM,CAACA,KAAD,EAAQI,QAAR,IAAoBb,UAAU,CAACQ,WAAD,EAAcF,aAAd,CAApC;AAEA,sBACI,QAAC,mBAAD;AAAqB,IAAA,KAAK,EAAE;AAACQ,MAAAA,IAAI,EAAEL,KAAP;AAAcI,MAAAA;AAAd,KAA5B;AAAA,cAAsDT;AAAtD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAtBM;;GAAMD,mB;UACMF,c;;;KADNE,mB","sourcesContent":["import { createContext, useContext, useReducer } from \"react\";\n\nimport { useAuthContext } from \"../hooks/useAuthContext\";\n\nexport const chatContext = createContext();\n\n//const url = `${process.env.REACT_APP_BASE_URL}/api/v1/users/login`;\n\nexport const ChatContextProvider = ({children}) => {\n    const {user} = useAuthContext()\n\n    const INITIAL_STATE = {\n        messages: []\n    }\n\n    const chatReducer = (state, action)=>{\n        switch (action.type) {\n            case \"LOADMESSAGES\":\n                return {messages: action.payload}\n            default:\n                return state\n\n        }\n    };\n\n    const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE)\n\n    return (\n        <ChatContextProvider value={{data: state, dispatch}}>{children}</ChatContextProvider>\n    )\n}"]},"metadata":{},"sourceType":"module"}