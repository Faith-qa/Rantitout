{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nimport { useChatContext } from \"./useChatContext\";\nexport const useChats = () => {\n  _s();\n\n  const [chats, setChats] = useState([]);\n  const [err, setErr] = useState(null);\n  const {\n    user\n  } = useAuthContext(); //const {dispatch} = useChatContext()\n\n  const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${user._id}`; // useEffect(()=>{\n  //     LoadChats()\n  //     console.log(chats)\n  // }, [chats])\n\n  const loadChats = async () => {\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n        'Content-Type': 'Application/json'\n      }\n    });\n    const res_json = res.json();\n    console.log(res_json);\n    setChats(res_json);\n  };\n\n  const updateChat = async (cDate, text) => {\n    setErr(null);\n    console.log(url + `/${cDate}`);\n\n    try {\n      //update chats on date\n      const response = await fetch(url + `/${cDate}`, {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n          'Content-Type': 'Application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      const json = await response.json();\n      setChats(json);\n      console.log(\"HELLO WORLD\", chats);\n    } catch (err) {\n      setErr(err);\n      console.log(err);\n    }\n  };\n\n  const createChat = async date => {\n    setErr(null);\n\n    try {\n      const response = await fetch(url + `/${date}`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n          'Content-Type': 'Application/json'\n        },\n        body: JSON.stringify({\n          date\n        })\n      });\n      const json = await response.json();\n      console.log(\"hello world\", json);\n      setChats(json);\n    } catch (err) {\n      console.log(err);\n      setErr(err);\n    }\n  };\n\n  return {\n    loadChats,\n    updateChat,\n    createChat,\n    chats,\n    err\n  };\n};\n\n_s(useChats, \"zugv9YlOFU4y4z/d2AtUst7csvI=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"sources":["/home/faith/personal_project/TalktoMe/client/src/hooks/useChats.jsx"],"names":["React","useState","useEffect","useAuthContext","useChatContext","useChats","chats","setChats","err","setErr","user","url","process","env","REACT_APP_BASE_URL","_id","loadChats","res","fetch","method","headers","Authorization","token","res_json","json","console","log","updateChat","cDate","text","response","body","JSON","stringify","createChat","date"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nimport { useAuthContext } from \"./useAuthContext\";\nimport { useChatContext } from \"./useChatContext\";\n\nexport const useChats = () => {\n    const [chats, setChats] = useState([]);\n    const [err, setErr] = useState(null);\n\n    const {user} = useAuthContext();\n    //const {dispatch} = useChatContext()\n    const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${user._id}`;\n\n    // useEffect(()=>{\n    //     LoadChats()\n    //     console.log(chats)\n    // }, [chats])\n    const loadChats = async()=>{\n       const res = await fetch(url, {\n        method: 'GET',\n        headers: {Authorization: `Bearer ${user.token}`, 'Content-Type': 'Application/json'},\n       })\n       const res_json = res.json()\n       console.log(res_json)\n       setChats(res_json)\n\n\n\n\n\n    }\n\n    const updateChat = async(cDate, text) => {\n        setErr(null)\n        console.log(url +`/${cDate}`)\n\n        try{\n            //update chats on date\n            const response = await fetch(url +`/${cDate}`, {\n                method: 'PUT',\n                headers: {Authorization: `Bearer ${user.token}`, 'Content-Type': 'Application/json'},\n                body: JSON.stringify({text})\n            })\n\n            const json = await response.json();\n            setChats(json)\n            console.log(\"HELLO WORLD\", chats)\n        }catch(err){\n            setErr(err);\n            console.log(err)\n        }\n    }\n\n    const createChat = async(date)=> {\n        setErr(null)\n        try{\n            const response = await fetch(url + `/${date}`, {\n                method: 'POST',\n                headers: {Authorization: `Bearer ${user.token}`, 'Content-Type': 'Application/json'},\n                body: JSON.stringify({date})\n            })\n\n            const json = await response.json()\n            console.log(\"hello world\",json)\n            setChats(json)\n        }catch(err){console.log(err); setErr(err)}\n\n    }\n\n    return {loadChats, updateChat,createChat, chats, err};\n}"]},"metadata":{},"sourceType":"module"}