{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useChats = () => {\n  _s();\n\n  const [chats, setChats] = useState([]);\n  const [err, setErr] = useState(null);\n  const {\n    user\n  } = useAuthContext();\n  useEffect(() => {\n    const loadChats = async () => {\n      setErr(null); // var chaats = []\n\n      const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${user._id}`;\n\n      try {\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        });\n        const json = await response.json();\n\n        for (var i = 0; i < json.length; i++) {\n          for (var j = 0; j < i.length; j++) {\n            if (!j.date) {\n              setErr(json);\n              throw new Error(JSON.stringify(json));\n            } //  chaats.push(j)\n\n          }\n        } //console.log(json.date)\n        // if (!json.date) {\n        //     setErr(json)\n        //     throw new Error(JSON.stringify(json))\n        // }\n\n\n        console.log(\"hello\", JSON.parse(JSON.stringify(json)));\n        setChats(...json);\n      } catch (err) {\n        setErr(err);\n        console.log(err);\n      }\n    };\n  }, [chats]);\n  return {\n    chats,\n    err\n  };\n};\n\n_s(useChats, \"F0AwXHeyTBFrY12VrTlL5BP/l6Q=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"sources":["/home/faith/personal_project/TalktoMe/client/src/hooks/useChats.jsx"],"names":["React","useState","useEffect","useAuthContext","useChats","chats","setChats","err","setErr","user","loadChats","url","process","env","REACT_APP_BASE_URL","_id","response","fetch","method","headers","Authorization","token","json","i","length","j","date","Error","JSON","stringify","console","log","parse"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,IAAD,CAA9B;AAEA,QAAM;AAACQ,IAAAA;AAAD,MAASN,cAAc,EAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMQ,SAAS,GAAG,YAAS;AACvBF,MAAAA,MAAM,CAAC,IAAD,CAAN,CADuB,CAE3B;;AACI,YAAMG,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,iBAAgBL,IAAI,CAACM,GAAI,EAAvE;;AAEA,UAAG;AACC,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,EAAM;AAC9BO,UAAAA,MAAM,EAAE,KADsB;AAE9BC,UAAAA,OAAO,EAAE;AAACC,YAAAA,aAAa,EAAG,UAASX,IAAI,CAACY,KAAM;AAArC;AAFqB,SAAN,CAA5B;AAKA,cAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAT,EAAnB;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,eAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,CAAC,CAACC,MAArB,EAA6BC,CAAC,EAA9B,EAAkC;AAC9B,gBAAI,CAACA,CAAC,CAACC,IAAP,EAAY;AACRlB,cAAAA,MAAM,CAACc,IAAD,CAAN;AACA,oBAAM,IAAIK,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAV,CAAN;AACH,aAJ6B,CAK9B;;AACH;AAIJ,SAnBF,CAoBC;AAEA;AACA;AACA;AACA;;;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAX,CAArB;AACAhB,QAAAA,QAAQ,CAAC,GAAGgB,IAAJ,CAAR;AAIH,OA/BD,CA+BC,OAAMf,GAAN,EAAU;AACPC,QAAAA,MAAM,CAACD,GAAD,CAAN;AACAuB,QAAAA,OAAO,CAACC,GAAR,CAAYxB,GAAZ;AAEH;AAGR,KA3CG;AA4CP,GA7CY,EA6CV,CAACF,KAAD,CA7CU,CAAT;AAmDA,SAAO;AAACA,IAAAA,KAAD;AAAQE,IAAAA;AAAR,GAAP;AACH,CA1DM;;GAAMH,Q;UAIMD,c","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useChats = () => {\n    const [chats, setChats] = useState([]);\n    const [err, setErr] = useState(null);\n\n    const {user} = useAuthContext();\n\n    useEffect(()=> {\n        const loadChats = async()=>{\n            setErr(null)\n        // var chaats = []\n            const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${user._id}`;\n\n            try{\n                const response = await fetch(url, {\n                    method: 'GET',\n                    headers: {Authorization: `Bearer ${user.token}`}\n                })\n\n                const json = await response.json()\n\n                for (var i = 0; i < json.length; i++) {\n                    for(var j = 0; j < i.length; j++) {\n                        if (!j.date){\n                            setErr(json)\n                            throw new Error(JSON.stringify(json))\n                        }\n                        //  chaats.push(j)\n                    }\n\n\n                    \n                }\n                //console.log(json.date)\n\n                // if (!json.date) {\n                //     setErr(json)\n                //     throw new Error(JSON.stringify(json))\n                // }\n                console.log(\"hello\", JSON.parse(JSON.stringify(json)))\n                setChats(...json)\n\n\n\n            }catch(err){\n                setErr(err);\n                console.log(err)\n\n            }\n\n\n    }\n}, [chats])\n\n\n\n\n    \n    return {chats, err};\n}"]},"metadata":{},"sourceType":"module"}