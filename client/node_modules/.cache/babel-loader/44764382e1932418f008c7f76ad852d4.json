{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useChats = () => {\n  _s();\n\n  const [chats, setChats] = useState([]);\n  const [err, setErr] = useState(null);\n  const {\n    user\n  } = useAuthContext();\n\n  const loadChats = async () => {\n    setErr(null);\n    const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${user._id}`;\n\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const json = await response.json();\n\n      for (var i = 0; i < json.length; i++) {\n        for (var j = 0; j < i.length; j++) {\n          if (!j.date) {\n            setErr(json);\n            throw new Error(JSON.stringify(json));\n          }\n        }\n      }\n\n      console.log(json.date); // if (!json.date) {\n      //     setErr(json)\n      //     throw new Error(JSON.stringify(json))\n      // }\n\n      console.log(\"hello\", JSON.parse(json));\n      setChats(json);\n    } catch (err) {\n      setErr(err);\n      console.log(err);\n    }\n  };\n\n  return {\n    loadChats,\n    chats,\n    err\n  };\n};\n\n_s(useChats, \"zugv9YlOFU4y4z/d2AtUst7csvI=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"sources":["/home/faith/personal_project/TalktoMe/client/src/hooks/useChats.jsx"],"names":["React","useState","useAuthContext","useChats","chats","setChats","err","setErr","user","loadChats","url","process","env","REACT_APP_BASE_URL","_id","response","fetch","method","headers","Authorization","token","json","i","length","j","date","Error","JSON","stringify","console","log","parse"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,IAAD,CAA9B;AAEA,QAAM;AAACO,IAAAA;AAAD,MAASN,cAAc,EAA7B;;AAGA,QAAMO,SAAS,GAAG,YAAW;AACzBF,IAAAA,MAAM,CAAC,IAAD,CAAN;AACA,UAAMG,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,iBAAgBL,IAAI,CAACM,GAAI,EAAvE;;AACA,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,EAAM;AAC9BO,QAAAA,MAAM,EAAE,KADsB;AAE9BC,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAG,UAASX,IAAI,CAACY,KAAM;AAArC;AAFqB,OAAN,CAA5B;AAKA,YAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAT,EAAnB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,aAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,CAAC,CAACC,MAArB,EAA6BC,CAAC,EAA9B,EAAkC;AAC9B,cAAI,CAACA,CAAC,CAACC,IAAP,EAAY;AACRlB,YAAAA,MAAM,CAACc,IAAD,CAAN;AACA,kBAAM,IAAIK,KAAJ,CAAUC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAV,CAAN;AACH;AACJ;AAGJ;;AACDQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACI,IAAjB,EAlBD,CAoBC;AACA;AACA;AACA;;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,IAAI,CAACI,KAAL,CAAWV,IAAX,CAArB;AACAhB,MAAAA,QAAQ,CAACgB,IAAD,CAAR;AAIH,KA7BD,CA6BC,OAAMf,GAAN,EAAU;AACPC,MAAAA,MAAM,CAACD,GAAD,CAAN;AACAuB,MAAAA,OAAO,CAACC,GAAR,CAAYxB,GAAZ;AAEH;AAIJ,GAxCD;;AA0CA,SAAO;AAACG,IAAAA,SAAD;AAAYL,IAAAA,KAAZ;AAAmBE,IAAAA;AAAnB,GAAP;AACH,CAlDM;;GAAMH,Q;UAIMD,c","sourcesContent":["import React, {useState} from \"react\";\n\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useChats = () => {\n    const [chats, setChats] = useState([]);\n    const [err, setErr] = useState(null);\n\n    const {user} = useAuthContext();\n\n\n    const loadChats = async() => {\n        setErr(null)\n        const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${user._id}`;\n        try{\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {Authorization: `Bearer ${user.token}`}\n            })\n\n            const json = await response.json()\n\n            for (var i = 0; i < json.length; i++) {\n                for(var j = 0; j < i.length; j++) {\n                    if (!j.date){\n                        setErr(json)\n                        throw new Error(JSON.stringify(json))\n                    }\n                }\n\n                \n            }\n            console.log(json.date)\n\n            // if (!json.date) {\n            //     setErr(json)\n            //     throw new Error(JSON.stringify(json))\n            // }\n            console.log(\"hello\", JSON.parse(json))\n            setChats(json)\n\n\n\n        }catch(err){\n            setErr(err);\n            console.log(err)\n\n        }\n\n\n\n    }\n\n    return {loadChats, chats, err}\n}"]},"metadata":{},"sourceType":"module"}