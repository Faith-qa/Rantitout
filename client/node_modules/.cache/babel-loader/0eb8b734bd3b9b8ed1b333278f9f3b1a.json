{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useLogin = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const url = `${process.env.REACT_APP_BASE_URL}/api/v1/users/login`;\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n\n    if (!response.ok || !response.token) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n\n    if (response.ok) {\n      //save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json)); //update the auth context \n\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n\n_s(useLogin, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"sources":["/home/faith/personal_project/TalktoMe/client/src/hooks/useLogin.jsx"],"names":["useState","useAuthContext","useLogin","error","setError","isLoading","setIsLoading","dispatch","login","email","password","url","process","env","REACT_APP_BASE_URL","response","fetch","method","headers","body","JSON","stringify","json","ok","token","localStorage","setItem","type","payload"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAK;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAeN,cAAc,EAAnC;;AAEA,QAAMO,KAAK,GAAG,OAAMC,KAAN,EAAaC,QAAb,KAAwB;AAClCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAEA,UAAMO,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,qBAA9C;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAC9BM,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFqB;AAG9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACZ,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAf;AAHwB,KAAN,CAA5B;AAMA,UAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;;AAEA,QAAI,CAACP,QAAQ,CAACQ,EAAV,IAAgB,CAACR,QAAQ,CAACS,KAA9B,EAAqC;AACjClB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,QAAQ,CAACkB,IAAI,CAACnB,KAAN,CAAR;AACH;;AACD,QAAGY,QAAQ,CAACQ,EAAZ,EAAe;AACX;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BN,IAAI,CAACC,SAAL,CAAeC,IAAf,CAA7B,EAFW,CAIX;;AAEAf,MAAAA,QAAQ,CAAC;AAACoB,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,OAAO,EAAEN;AAAzB,OAAD,CAAR;AAEAhB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GA5BD;;AA8BA,SAAO;AAACE,IAAAA,KAAD;AAAQH,IAAAA,SAAR;AAAmBF,IAAAA;AAAnB,GAAP;AAGH,CAtCM;;GAAMD,Q;UAGYD,c","sourcesContent":["import {useState} from 'react';\nimport {useAuthContext} from './useAuthContext'\n\n\nexport const useLogin = () =>{\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(null)\n    const { dispatch } = useAuthContext()\n\n    const login = async(email, password)=>{\n        setIsLoading(true)\n        setError(null)\n\n        const url = `${process.env.REACT_APP_BASE_URL}/api/v1/users/login`;\n\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({email, password})\n        })\n\n        const json = await response.json()\n\n        if (!response.ok || !response.token) {\n            setIsLoading(false)\n            setError(json.error)\n        }\n        if(response.ok){\n            //save the user to local storage\n            localStorage.setItem('user', JSON.stringify(json))\n\n            //update the auth context \n\n            dispatch({type: 'LOGIN', payload: json})\n\n            setIsLoading(false)\n        }\n    }\n\n    return {login, isLoading, error}\n    \n\n}"]},"metadata":{},"sourceType":"module"}