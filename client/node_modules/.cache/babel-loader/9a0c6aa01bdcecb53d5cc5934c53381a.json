{"ast":null,"code":"var _jsxFileName = \"/home/faith/personal_project/TalktoMe/client/src/Context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst navigate = useNavigate();\nconst url = `${process.env.REACT_APP_BASE_URL}/api/v1/users`;\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState({});\n  const [err, setErr] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const getUser = () => {\n    const user = localStorage.getItem('user');\n\n    if (!user) {\n      throw new Error(\"not authorized\");\n      navigate('/login');\n    }\n\n    return user;\n  };\n\n  useEffect(() => {\n    const authorize = () => {\n      try {\n        const user = JSON.parse(getUser());\n        setCurrentUser(user);\n      } catch (err) {\n        setErr(err);\n        console.log(err);\n      }\n    };\n\n    return authorize();\n  }, []); // export const AuthontextProvider = ({children})=>{\n  //     const [currentUser, setCurrentUser] = useState({})\n  //     const user = JSON.parse(localStorage.getItem('user'))\n  //     useEffect(()=>{\n  //         const authorize =() => {\n  //             if (user != null){\n  //                 setCurrentUser(user)\n  //             }\n  //         }\n  //         return authorize()\n  //     },[]);\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"jRwWbbJfCvuZEX6hEQdwzGdMJNE=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/faith/personal_project/TalktoMe/client/src/Context/AuthContext.js"],"names":["axios","createContext","useState","useEffect","useNavigate","navigate","url","process","env","REACT_APP_BASE_URL","AuthContext","AuthProvider","children","currentUser","setCurrentUser","err","setErr","loading","setLoading","getUser","user","localStorage","getItem","Error","authorize","JSON","parse","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,QAAQ,GAAGD,WAAW,EAA5B;AAGA,MAAME,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,eAA9C;AAEA,OAAO,MAAMC,WAAW,gBAAGT,aAAa,EAAjC;AAEP,OAAO,MAAMU,YAAY,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AACvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,EAA9B;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMiB,OAAO,GAAC,MAAI;AACd,UAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;;AACA,QAAI,CAACF,IAAL,EAAU;AACN,YAAM,IAAIG,KAAJ,CAAW,gBAAX,CAAN;AACAlB,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACH;;AACD,WAAOe,IAAP;AACH,GAPD;;AAUAjB,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMqB,SAAS,GAAG,MAAM;AAEpB,UAAG;AACC,cAAMJ,IAAI,GAAGK,IAAI,CAACC,KAAL,CAAWP,OAAO,EAAlB,CAAb;AACAL,QAAAA,cAAc,CAACM,IAAD,CAAd;AACH,OAHD,CAGC,OAAML,GAAN,EAAU;AACPC,QAAAA,MAAM,CAACD,GAAD,CAAN;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ;AACH;AACJ,KATD;;AAWA,WAAOS,SAAS,EAAhB;AAKH,GAjBQ,EAiBP,EAjBO,CAAT,CAfuC,CAmC3C;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,sBAEA,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACX,MAAAA;AAAD,KAA7B;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UAFA;AAOH,CA1DM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import axios from \"axios\";\nimport { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom'\n\nconst navigate = useNavigate()\n\n\nconst url = `${process.env.REACT_APP_BASE_URL}/api/v1/users`;\n\nexport const AuthContext = createContext()\n\nexport const AuthProvider = ({children}) =>{\n    const [currentUser, setCurrentUser] = useState({})\n    const [err, setErr] = useState();\n    const [loading, setLoading] = useState(false)\n\n    const getUser=()=>{\n        const user = localStorage.getItem('user');\n        if (!user){\n            throw new Error (\"not authorized\")\n            navigate('/login')\n        }\n        return user\n    }\n\n\n    useEffect(()=>{\n        const authorize = () => {\n\n            try{\n                const user = JSON.parse(getUser())\n                setCurrentUser(user)\n            }catch(err){\n                setErr(err)\n                console.log(err)\n            }\n        }\n\n        return authorize()  \n        \n        \n\n        \n    },[]);\n\n\n// export const AuthontextProvider = ({children})=>{\n//     const [currentUser, setCurrentUser] = useState({})\n\n\n//     const user = JSON.parse(localStorage.getItem('user'))\n\n//     useEffect(()=>{\n        \n//         const authorize =() => {\n//             if (user != null){\n//                 setCurrentUser(user)\n//             }\n//         }\n//         return authorize()\n//     },[]);\n\n    return(\n\n    <AuthContext.Provider value={{currentUser}}>\n        {children}\n         \n    </AuthContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}