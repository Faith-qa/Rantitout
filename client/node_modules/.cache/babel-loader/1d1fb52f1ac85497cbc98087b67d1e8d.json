{"ast":null,"code":"var _jsxFileName = \"/home/faith/personal_project/TalktoMe/client/src/components/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { useState, useContext } from 'react';\nimport { AuthContext } from '../Context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n\n  const [chatdate, setChatdate] = useState('');\n  const [user, setUserid] = useState(null);\n  const [err, setErr] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  console.log(\"hi\", currentUser);\n  const userp = JSON.parse(localStorage.getItem('user'));\n  const cdate = new Date(chatdate);\n  const userid = userp._id;\n  const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${userid}/${cdate}`;\n\n  const handleSearch = async () => {\n    const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${userid}/${new Date(cdate).toISOString()}`;\n    const theheaders = {\n      headers: {\n        Authorization: `Bearer ${currentUser && currentUser.token}`\n      }\n    };\n    console.log(theheaders);\n    axios.get(url, theheaders).then(res => {\n      console.log(res.data);\n      setChatdate(res.data);\n    }).catch(err => {\n      setErr(true);\n    });\n  };\n\n  const handleKey = e => {\n    e.code === \"Enter\" && handleSearch();\n  };\n\n  const handleSelect = async () => {\n    // check weather the group exists or not(chats collection)\n    //if not create a new one\n    try {\n      const res = await axios.get(`url/${userid}/${chatdate}`);\n\n      if (!res) {\n        const params = {\n          messages: [],\n          chatdate\n        };\n        await axios.post(url, params); //create user chat\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchForm\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        onKeyDown: handleKey,\n        onChange: e => setChatdate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Chat not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }, this), chatdate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://images.pexels.com/photos/1967902/pexels-photo-1967902.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfo\",\n        onClick: handleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" 12/22/2022\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"9JFwOsP15tBPqgXo+5MvtqKu5js=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/faith/personal_project/TalktoMe/client/src/components/Search.jsx"],"names":["axios","React","useState","useContext","AuthContext","Search","chatdate","setChatdate","user","setUserid","err","setErr","currentUser","console","log","userp","JSON","parse","localStorage","getItem","cdate","Date","userid","_id","url","process","env","REACT_APP_BASE_URL","handleSearch","toISOString","theheaders","headers","Authorization","token","get","then","res","data","catch","handleKey","e","code","handleSelect","params","messages","post","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React from 'react'\nimport { useState, useContext } from 'react';\nimport { AuthContext } from '../Context/AuthContext'\n\n\nexport const Search = () => {\n  const [chatdate, setChatdate] = useState('');\n  const [user, setUserid ] = useState(null)\n  const [err, setErr] = useState(false)\n\n  const { currentUser } = useContext(AuthContext);\n\n  console.log(\"hi\", currentUser)\n\n  const userp = JSON.parse(localStorage.getItem('user'))\n  const cdate = new Date(chatdate)\n  \n  const userid = userp._id\n\n  const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${userid}/${cdate}`;\n\n\n\n  const handleSearch = async () => {\n    const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${userid}/${new Date(cdate).toISOString()}`;\n    const theheaders = {\n      headers: { Authorization: `Bearer ${currentUser && currentUser.token}` },\n\n    }\n    console.log(theheaders)\n      \n    \n    axios\n      .get(url, theheaders)\n      .then((res)=>{\n        console.log(res.data)\n        setChatdate(res.data)\n        \n      })\n      .catch((err)=>{\n        setErr(true)\n      })\n\n\n  };\n  const handleKey = e=>{\n    e.code===\"Enter\" && handleSearch();\n  }\n\n  const handleSelect =async ()=>{\n    // check weather the group exists or not(chats collection)\n    //if not create a new one\n    try {\n      const res = await axios.get(`url/${userid}/${chatdate}`)\n\n      if (!res) {\n        const params = {messages:[], chatdate}\n         await axios.post(url, \n        params)\n\n        //create user chat\n        \n\n        \n      }\n      \n    }catch (err){\n      console.log(err)\n    }\n\n  }\n\n  return (\n    <div className='search'>\n      <div className=\"searchForm\">\n        <input type=\"date\" onKeyDown={handleKey} onChange={e=>setChatdate(e.target.value)}/>\n      </div>\n      {err && <span>Chat not found</span>}\n      {chatdate && <div className=\"userChat\">\n        <img src=\"https://images.pexels.com/photos/1967902/pexels-photo-1967902.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\" alt=\"\"/>\n        <div className=\"userChatInfo\" onClick={handleSelect}></div>\n        <span> 12/22/2022</span>\n      </div>}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}