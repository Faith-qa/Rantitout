{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const usechats = () => {\n  _s();\n\n  const [chats, setChats] = useState([]);\n  const [err, setErr] = useState(null);\n  const {\n    user\n  } = useAuthContext();\n\n  const loadChats = async () => {\n    setErr(null);\n    const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${user._id}`;\n\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const json = await response.json();\n\n      if (!json.date) {\n        setErr(json);\n        throw new Error(json);\n      }\n\n      setChats(json);\n    } catch (err) {\n      setErr(err);\n      console.log(err);\n    }\n  };\n\n  useEffect(async () => {\n    await loadChats();\n  }, [chats]);\n};\n\n_s(usechats, \"F0AwXHeyTBFrY12VrTlL5BP/l6Q=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"sources":["/home/faith/personal_project/TalktoMe/client/src/hooks/useChats.jsx"],"names":["React","useState","useAuthContext","usechats","chats","setChats","err","setErr","user","loadChats","url","process","env","REACT_APP_BASE_URL","_id","response","fetch","method","headers","Authorization","token","json","date","Error","console","log","useEffect"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,IAAD,CAA9B;AAEA,QAAM;AAACO,IAAAA;AAAD,MAASN,cAAc,EAA7B;;AAGA,QAAMO,SAAS,GAAG,YAAW;AACzBF,IAAAA,MAAM,CAAC,IAAD,CAAN;AACA,UAAMG,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,iBAAgBL,IAAI,CAACM,GAAI,EAAvE;;AACA,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,EAAM;AAC9BO,QAAAA,MAAM,EAAE,KADsB;AAE9BC,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAG,UAASX,IAAI,CAACY,KAAM;AAArC;AAFqB,OAAN,CAA5B;AAKA,YAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAT,EAAnB;;AAEA,UAAI,CAACA,IAAI,CAACC,IAAV,EAAgB;AACZf,QAAAA,MAAM,CAACc,IAAD,CAAN;AACA,cAAM,IAAIE,KAAJ,CAAUF,IAAV,CAAN;AACH;;AAEDhB,MAAAA,QAAQ,CAACgB,IAAD,CAAR;AAGH,KAhBD,CAgBC,OAAMf,GAAN,EAAU;AACPC,MAAAA,MAAM,CAACD,GAAD,CAAN;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYnB,GAAZ;AAEH;AAIJ,GA3BD;;AA6BAoB,EAAAA,SAAS,CAAC,YAAS;AACf,UAAMjB,SAAS,EAAf;AAEH,GAHQ,EAGN,CAACL,KAAD,CAHM,CAAT;AAKH,CAzCM;;GAAMD,Q;UAIMD,c","sourcesContent":["import React, {useState} from \"react\";\n\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const usechats = () => {\n    const [chats, setChats] = useState([])\n    const [err, setErr] = useState(null)\n\n    const {user} = useAuthContext()\n\n\n    const loadChats = async() => {\n        setErr(null)\n        const url = `${process.env.REACT_APP_BASE_URL}/api/v1/chats/${user._id}`;\n        try{\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {Authorization: `Bearer ${user.token}`}\n            })\n\n            const json = await response.json()\n\n            if (!json.date) {\n                setErr(json)\n                throw new Error(json)\n            }\n\n            setChats(json)\n\n\n        }catch(err){\n            setErr(err);\n            console.log(err)\n\n        }\n\n\n\n    }\n\n    useEffect(async()=>{\n        await loadChats()\n        \n    }, [chats])\n\n}"]},"metadata":{},"sourceType":"module"}